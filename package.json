{
  "name": "forkmain",
  "version": "0.2.5",
  "displayName": "ForkMain",
  "description": "Makes developing with Kubernetes feel like on local. IDE tool for cloud-native development",
  "license": "Apache-2.0",
  "icon": "images/icon.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/h8r-dev/forkmain-vscode-extension.git"
  },
  "engines": {
    "vscode": "^1.58.0"
  },
  "categories": [
    "Other"
  ],
  "keywords": [
    "k8s",
    "Kubernetes",
    "cloud-native",
    "cloud",
    "debugger",
    "microservices",
    "application"
  ],
  "activationEvents": [
    "*"
  ],
  "extensionKind": [
    "workspace"
  ],
  "capabilities": {
    "untrustedWorkspaces": {
      "supported": true
    }
  },
  "main": "./dist/extension.js",
  "nhctl": {
    "serverVersion": "0.4.7",
    "version": "0.6.15"
  },
  "contributes": {
    "configuration": [
      {
        "title": "Forkmain",
        "properties": {
          "forkmain.checkNhctlVersion": {
            "type": "string",
            "enum": [
              "on",
              "off"
            ],
            "default": "on",
            "description": "%forkmain.nhctl.checkVersion%"
          },
          "forkmain.originalUrl": {
            "type": "string",
            "default": "https://forkmain.com",
            "description": "%forkmain.originUrl%"
          }
        }
      }
    ],
    "yamlValidation": [
      {
        "fileMatch": ".nocalhost/*.yaml",
        "url": "./schemas/nocalhost.configV2.json"
      }
    ],
    "viewsContainers": {
      "activitybar": [
        {
          "icon": "images/forkmain-logo.png",
          "id": "ForkmainView",
          "title": "Forkmain"
        }
      ]
    },
    "views": {
      "explorer": [
        {
          "id": "ForkmainSyncManage",
          "name": "Forkmain Sync Manage"
        }
      ],
      "ForkmainView": [
        {
          "id": "ForkmainK8STree",
          "name": "ForkmainK8STree",
          "type": "tree",
          "when": "!extensionActivated"
        },
        {
          "id": "Forkmain.Home",
          "name": "",
          "type": "webview",
          "when": "extensionActivated"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "ForkmainK8STree",
        "contents": "%noReady.description%",
        "when": "!nhctl.upgrade && !extensionActivated"
      },
      {
        "view": "ForkmainK8STree",
        "contents": "%noApps.description%",
        "when": "extensionActivated && emptyCluster"
      },
      {
        "view": "ForkmainK8STree",
        "contents": "%tips.nhctl.updating%",
        "when": "nhctl.upgrade"
      }
    ],
    "menus": {
      "view/title": [],
      "view/item/context": [
        {
          "command": "Forkmain.openProject",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "developing@1"
        },
        {
          "command": "Forkmain.run",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "developing@3"
        },
        {
          "command": "Forkmain.debug",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "developing@2"
        },
        {
          "command": "Forkmain.showApp",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^devspace-server/i",
          "group": "inline@0"
        },
        {
          "command": "Forkmain.installAppSource",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^devspace-local/i",
          "group": "inline@0"
        },
        {
          "command": "Forkmain.uninstallApp",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^application-nodefault-installed/i",
          "group": "inline@0"
        },
        {
          "command": "Forkmain.cleanPvc",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^application-(.*)-installed/i",
          "group": "application@1"
        },
        {
          "command": "Forkmain.applyKubernetesObject",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^application-(.*)-installed/i",
          "group": "application@2"
        },
        {
          "command": "Forkmain.upgradeApp",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^application-nodefault-installed[-\\w]*-server$/i",
          "group": "application@3"
        },
        {
          "command": "Forkmain.cleanPvc",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^devspace/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.cleanPvc",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "2"
        },
        {
          "command": "Forkmain.startDevMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!(developing|starting|develop_starting|vpn_))/i",
          "group": "inline@0"
        },
        {
          "command": "Forkmain.startCopyDevMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!(developing-duplicate|developing-replace-self|starting|vpn_healthy|vpn_unhealthy))/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.startMeshDevMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!(developing-duplicate|developing-replace-self|starting|vpn_healthy|vpn_unhealthy))/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.endDevMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(developing|develop_starting)/i",
          "group": "inline@0"
        },
        {
          "command": "Forkmain.editServiceConfig",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "inline@1"
        },
        {
          "command": "Forkmain.exec",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|daemonSet|pod-Running|daemonSet|cronjob|job|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "3"
        },
        {
          "command": "Forkmain.copyTerminal",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|pod-Running|crd-resources)-dev-(?!vpn_)/i",
          "group": "3"
        },
        {
          "command": "Forkmain.reset",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "2"
        },
        {
          "command": "Forkmain.resetDevspace",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^devspace-server/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.log",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(viewer:|)workload-(deployment|statefulSet|daemonSet|job|cronJob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "1"
        },
        {
          "command": "Forkmain.editManifest",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|daemonSet|job|cronJob|pod|crd-resources)-dev-(?!vpn_).*(?<!duplicate-self)$/i",
          "title": "%editManifest%",
          "group": "1"
        },
        {
          "command": "Forkmain.portForward",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(viewer:|)workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|pod-Running|crd-resources)-dev-(?!vpn_)/i",
          "group": "1"
        },
        {
          "command": "Forkmain.portForward",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(viewer:|)application-(.*)-installed/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.associateLocalDirectory",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!vpn_)/i",
          "group": "0"
        },
        {
          "command": "Forkmain.deleteKubernetesObject",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(workload|network|configuration|storage)-\\w+(-\\w+)?(-(complete|running|starting|unknown))?$/i",
          "group": "1"
        },
        {
          "command": "Forkmain.viewKubeConfig",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^kubeconfig/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.signout",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^kubeconfig-server$/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.deleteKubeConfig",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^kubeconfig-local/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.rename",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^kubeconfig-local/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.switchAssociate",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^syncAssociate-other/i"
        },
        {
          "command": "Forkmain.disassociateAssociate",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^syncAssociate-(.*)disassociate/i"
        },
        {
          "command": "Forkmain.reconnectSync",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^syncAssociate-(.*)resume/i"
        },
        {
          "command": "Forkmain.overrideSync",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^syncAssociate-(.*)override/i"
        },
        {
          "command": "Forkmain.openSyncDashboard",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^syncAssociate-(.*)override/i"
        },
        {
          "command": "Forkmain.startProxyMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /(^workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)-dev-(?!(developing|starting|develop_starting|vpn_)))|(^network-service-(?!vpn))/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.resumeProxyMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)|network-service)(.*)vpn_unhealthy/i",
          "group": "navigation"
        },
        {
          "command": "Forkmain.endProxyMode",
          "when": "view =~ ForkmainK8STree && viewItem =~ /^(workload-(deployment|statefulSet|job|daemonSet|cronjob|pod|crd-resources)|network-service)(.*)vpn/i",
          "group": "inline@0"
        }
      ]
    },
    "submenus": [
      {
        "id": "forkmain.editor.context",
        "label": "%forkmain.editor.context.label%"
      },
      {
        "id": "forkmain.editor.title.context",
        "label": "%forkmain.editor.title.context.label%"
      }
    ],
    "commands": [
      {
        "command": "Forkmain.resetPlugin",
        "title": "Forkmain: Reset Plugin"
      },
      {
        "command": "Forkmain.debug",
        "title": "Remote Debug"
      },
      {
        "command": "Forkmain.showClusterInfo",
        "title": "Output cluster information"
      },
      {
        "command": "Forkmain.clearLocalCluster",
        "title": "Clear local cluster"
      },
      {
        "command": "Forkmain.clearServerCluster",
        "title": "Clear server cluster"
      },
      {
        "command": "Forkmain.autoStartDevMode",
        "title": "Auto Start Dev"
      },
      {
        "command": "Forkmain.run",
        "title": "Remote Run"
      },
      {
        "command": "Forkmain.ClustersView",
        "title": "Clusters"
      },
      {
        "command": "Forkmain.rename",
        "title": "%rename%"
      },
      {
        "command": "Forkmain.applyKubernetesObject",
        "title": "Apply New Manifest"
      },
      {
        "command": "Forkmain.deleteKubernetesObject",
        "title": "Delete"
      },
      {
        "command": "Forkmain.openEndPoint",
        "title": "Open Endpoint"
      },
      {
        "command": "Forkmain.signin",
        "title": "Sign in",
        "icon": "$(sign-in)"
      },
      {
        "command": "Forkmain.openSyncCommand",
        "title": "statusBarSync"
      },
      {
        "command": "Forkmain.openSyncDashboard",
        "title": "%sync.openDashboard%"
      },
      {
        "command": "Forkmain.syncManage.refresh",
        "title": "Refresh",
        "alt": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "Forkmain.refresh",
        "title": "Refresh",
        "alt": "Refresh",
        "icon": "$(refresh)"
      },
      {
        "command": "Forkmain.refreshing",
        "title": "Refreshing",
        "alt": "Refreshing",
        "icon": "$(sync~spin)"
      },
      {
        "command": "Forkmain.addKubeconfig",
        "title": "Add Cluster",
        "alt": "Add Cluster",
        "icon": "$(add)"
      },
      {
        "command": "Forkmain.LocateWorkNode",
        "title": "Locate Current Service",
        "icon": {
          "dark": "images/icon/locate.svg",
          "light": "images/icon/locate_light.svg"
        }
      },
      {
        "command": "Forkmain.installAppSource",
        "title": "Install App",
        "icon": "$(rocket)"
      },
      {
        "command": "Forkmain.showApp",
        "title": "Install App",
        "icon": "$(rocket)"
      },
      {
        "command": "Forkmain.installApp",
        "title": "Install App"
      },
      {
        "command": "Forkmain.upgradeApp",
        "title": "%upgradeApp%"
      },
      {
        "command": "Forkmain.uninstallApp",
        "title": "%uninstallApp%",
        "icon": "$(trash)"
      },
      {
        "command": "Forkmain.viewKubeConfig",
        "title": "%ViewKubeConfig%"
      },
      {
        "command": "Forkmain.deleteKubeConfig",
        "title": "Delete"
      },
      {
        "command": "Forkmain.signout",
        "title": "Logout"
      },
      {
        "command": "getWordloadList",
        "title": "getWordloadList"
      },
      {
        "command": "Forkmain.startDevMode",
        "title": "%Start.Develop%",
        "icon": "images/icon/dev_start.svg",
        "category": "devSpace"
      },
      {
        "command": "Forkmain.startCopyDevMode",
        "title": "%startCopyDevMode%",
        "icon": "images/icon/dev_copy.svg"
      },
      {
        "command": "Forkmain.startMeshDevMode",
        "title": "%startMeshDevMode%",
        "icon": "images/icon/dev_copy.svg"
      },
      {
        "command": "Forkmain.endDevMode",
        "title": "%End.Develop%",
        "icon": "images/icon/dev_end.svg",
        "category": "devSpace"
      },
      {
        "command": "Forkmain.reset",
        "title": "%resetPod%"
      },
      {
        "command": "Forkmain.resetDevspace",
        "title": "%Reset%"
      },
      {
        "command": "Forkmain.exec",
        "title": "%Terminal%"
      },
      {
        "command": "Forkmain.copyTerminal",
        "title": "%CopyTerminal%"
      },
      {
        "command": "Forkmain.editManifest",
        "title": "%editManifest%"
      },
      {
        "command": "Forkmain.log",
        "title": "%Logs%"
      },
      {
        "command": "Forkmain.portForward",
        "title": "%PortForward%"
      },
      {
        "command": "Forkmain.cleanPvc",
        "title": "%CleanPvc%"
      },
      {
        "command": "Forkmain.editServiceConfig",
        "title": "%viewDevConfig%",
        "icon": "images/icon/setting_normal.svg"
      },
      {
        "command": "Forkmain.editHelmValues",
        "title": "$HelmValues$",
        "icon": "$(file)"
      },
      {
        "command": "Forkmain.associateLocalDirectory",
        "title": "%AssociateLocalDir%"
      },
      {
        "command": "Forkmain.openProject",
        "title": "%OpenProject%"
      },
      {
        "command": "Forkmain.reconnectSync",
        "shortTitle": "resume",
        "title": "%resumeSync%"
      },
      {
        "command": "Forkmain.overrideSync",
        "shortTitle": "override",
        "title": "%overrideRemoteChang%"
      },
      {
        "command": "Forkmain.switchAssociate",
        "title": "%switchAssociate%"
      },
      {
        "command": "Forkmain.disassociateAssociate",
        "title": "%disassociateAssociate%"
      },
      {
        "command": "Forkmain.startProxyMode",
        "title": "%startProxyMode%",
        "icon": "images/icon/vpn.svg"
      },
      {
        "command": "Forkmain.resumeProxyMode",
        "title": "%resumeProxyMode%",
        "icon": "images/icon/vpn_disconnect.svg"
      },
      {
        "command": "Forkmain.endProxyMode",
        "title": "%endProxyMode%",
        "icon": "images/icon/vpn_close.svg"
      }
    ],
    "debuggers": [
      {
        "type": "Forkmain",
        "label": "Forkmain",
        "languages": [
          "javascript",
          "go",
          "java",
          "python",
          "ruby",
          "php"
        ],
        "configurationAttributes": {
          "attach": {}
        },
        "initialConfigurations": [
          {
            "type": "forkmain",
            "request": "attach",
            "name": "Forkmain Debug"
          }
        ],
        "configurationSnippets": [
          {
            "label": "Forkmain Debug: Attach",
            "description": "A new configuration for 'debugging' a forkmain.",
            "body": {
              "type": "forkmain",
              "request": "attach",
              "name": "Forkmain Debug"
            }
          }
        ]
      }
    ]
  },
  "scripts": {
    "build": "run-s -l prebuild compile package",
    "build:test": "run-s -l prebuild:test build",
    "test-install": "npm run test:ext -- test/extension/spec/install.spec.js",
    "test-index": "npm run test:ext -- test/extension/spec/index.spec.js",
    "test-dev": "npm run test:ext -- test/extension/spec/dev.spec.js",
    "test:ext": "jest --silent --forceExit --detectOpenHandles -i -c test/extension/jest.config.js",
    "analyze": "npm run compile -- --analyze",
    "postinstall": "node ./scripts/postinstall.js",
    "prebuild": "node ./scripts/pre.build.js",
    "compile": "node scripts/build.js --env=production",
    "package": "pnpm vsce package -o forkmain.vsix --no-dependencies",
    "ts-compile-check": "tsc --noEmit -p src/main",
    "watch": "node scripts/build.js",
    "test": "jest --forceExit --detectOpenHandles --maxWorkers=10",
    "prebuild:test": "node ./scripts/test.build.js"
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged && npm run ts-compile-check"
    }
  },
  "lint-staged": {
    "src": [
      "eslint --fix --ext ts"
    ],
    "./**/*@(.js|.jsx|.ts|.tsx|.json)": [
      "prettier --write",
      "git add"
    ]
  },
  "devDependencies": {
    "@material-ui/core": "^4.11.0",
    "@material-ui/data-grid": "4.0.0-alpha.35",
    "@material-ui/icons": "^4.9.1",
    "@material-ui/lab": "^4.0.0-alpha.57",
    "@types/async-retry": "^1.4.3",
    "@types/lodash-es": "^4.17.6",
    "@types/node": "^14.0.27",
    "@types/proper-lockfile": "^4.1.1",
    "@types/qs": "^6.9.5",
    "@types/react": "^16.14.2",
    "@types/react-dom": "^16.9.10",
    "@types/react-router-dom": "^5.1.6",
    "@types/semver": "^7.3.4",
    "@types/uuid": "^8.3.0",
    "@types/vscode": "^1.52.0",
    "@types/which": "^2.0.1",
    "@typescript-eslint/eslint-plugin": "^4.33.0",
    "@typescript-eslint/parser": "^3.8.0",
    "async-retry": "^1.3.1",
    "eslint": "^7.6.0",
    "eslint-config-airbnb-typescript": "^12.0.0",
    "eslint-plugin-import": "^2.22.1",
    "eslint-plugin-jsx-a11y": "^6.4.1",
    "eslint-plugin-react": "^7.21.5",
    "eslint-plugin-react-hooks": "^4.2.0",
    "husky": "^4.3.8",
    "lint-staged": "^11.1.2",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.2.0",
    "react": "^17.0.1",
    "react-dom": "^17.0.1",
    "react-router-dom": "^5.2.0",
    "tree-kill": "^1.2.2",
    "typescript": "4.0.2",
    "vsce": "^1.81.1"
  },
  "optionalDependencies": {
    "@ffmpeg-installer/ffmpeg": "^1.1.0",
    "@testing-library/jest-dom": "^5.11.9",
    "@testing-library/react": "^11.2.3",
    "@types/enzyme": "^3.10.8",
    "@types/jest": "^26.0.20",
    "@types/mocha": "^8.0.0",
    "@vscode/test-electron": "^2.1.2",
    "@wojtekmaj/enzyme-adapter-react-17": "^0.4.1",
    "copy-paste": "^1.3.0",
    "enzyme": "^3.11.0",
    "fluent-ffmpeg": "^2.1.2",
    "identity-obj-proxy": "^3.0.0",
    "is-port-reachable": "^3.0.0",
    "jest": "^26.6.3",
    "mocha": "^8.1.3",
    "puppeteer-core": "^10.2.0",
    "ts-jest": "^26.4.4"
  },
  "dependencies": {
    "ajv": "^6.12.6",
    "axios": "^0.21.0",
    "camelcase": "^6.2.0",
    "change-case": "^4.1.2",
    "classnames": "^2.3.1",
    "esbuild": "^0.14.21",
    "fs-extra": "^10.0.0",
    "get-port": "^3.2",
    "highlight.js": "^10.5.0",
    "i18next": "^20.3.5",
    "iconv-lite": "^0.6.3",
    "is-windows": "^1.0.2",
    "json5": "^2.2.0",
    "lodash-es": "^4.17.21",
    "log4js": "^6.3.0",
    "proper-lockfile": "^4.1.2",
    "qs": "^6.9.4",
    "rimraf": "^3.0.2",
    "semver": "^7.3.4",
    "tempy": "^1.0.0",
    "uuid": "^8.3.2",
    "vscode-nls": "^5.0.0",
    "which": "^2.0.2",
    "yaml": "^1.10.0"
  },
  "publisher": "forkmain"
}
